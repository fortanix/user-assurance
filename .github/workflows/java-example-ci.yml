# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven for java-example

on:
  push:
    branches: [ "main" ]
    paths:
        - 'key-attestation/java-example/**'
        - '.github/workflows/**'
  pull_request:
    branches: [ "main" ]
    paths:
        - 'key-attestation/java-example/**'
        - '.github/workflows/**'
  schedule:
    # Runs at 00:00 UTC every other day
    - cron: '0 0 */2 * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Check and Install Maven
      run: |
          if ! command -v mvn --version &> /dev/null
          then
            echo "Maven could not be found"
            echo "Installing Maven..."
            sudo apt update
            sudo apt install -y maven
            mvn --version
          else
            echo "Maven is already installed"
          fi
    - name: Build with Maven
      run: mvn -B package --file key-attestation/java-example/pom.xml
      env:
        AMER_APP_API_KEY: ${{ secrets.AMER_APP_API_KEY }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        directory: key-attestation/java-example
